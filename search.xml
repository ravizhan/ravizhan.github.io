<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>程序定制</title>
    <url>/posts/%E7%A8%8B%E5%BA%8F%E5%AE%9A%E5%88%B6.html</url>
    <content><![CDATA[<p>现在比较无聊，想接点项目练练手(主要还是没钱…)<br>价格很低(0~10元)，先做后付款(<strong>诚信</strong>)<br>我做完的也都会开源，供大家下载</p>
<p>联系方式左边有，qq/微信备注<strong>程序定制</strong>，推荐用<strong>邮箱</strong><br>写清楚你的需求(不要太过分)，推荐<strong>爬虫</strong>类的(比较拿手)，其他比较基础的也行</p>
<p>说下制作时间吧，因为我学业压力比较大(初三)，所以时间会稍长，1~2周，只有周末才能做，寒暑假的空闲时间较多，所以急着要的别找我，也不要老是催(我好可怜的…)</p>
<p>做好之后我会发下载链接，至于费用嘛，我会发收款码，给不给就是你的事了，放心，价格不会超过10元。<br>当然你不给也问题不大，下载链接一样会给你，至于下次会不会接你单呢，那就不好说了🤪</p>
]]></content>
      <tags>
        <tag>程序定制</tag>
      </tags>
  </entry>
  <entry>
    <title>cf-workers的使用</title>
    <url>/posts/cf-workers.html</url>
    <content><![CDATA[<h2 id="what’s-cf-workers"><a href="#what’s-cf-workers" class="headerlink" title="what’s cf-workers"></a>what’s cf-workers</h2><p>Cloudflare Workers允许你在Cloudflare的边缘节点运行JS, Rust, C, C++等代码<br>并且每天有100,000次的免费请求，对于绝大多数人来说，是完全够用的<br>具体介绍见Cloudflare Workers官网：<a href="https://workers.cloudflare.com/" target="_blank" rel="noopener">https://workers.cloudflare.com/</a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><blockquote>
<p>没有 Cloudflare 账号的提前注册一个</p>
</blockquote>
<p>打开 <a href="https://workers.cloudflare.com" target="_blank" rel="noopener">https://workers.cloudflare.com</a> ,登录上你的 Cloudflare 账号,激活 Workers 服务<br>然后自定义一个域名前缀，就可以啦</p>
<p>点击<code>创建Worker</code>就可以新建一个worker了<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io/posts/cf-workers/creat.jpg" width = "60%" /><br>点击这里就可以自定义worker的域名的前缀啦<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io/posts/cf-workers/1.jpg" width = "60%" /><br>然后在中间编写代码，最后点击<code>保存并部署</code>，就完成部署了<br>最后的访问地址是：<a href="https://worker前缀.一开始自定义的前缀.workers.dev，或者返回也能看见访问地址了" target="_blank" rel="noopener">https://worker前缀.一开始自定义的前缀.workers.dev，或者返回也能看见访问地址了</a><br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io/posts/cf-workers/2.jpg" width = "60%" /></p>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><blockquote>
<p>是不是很简单呢，下面有一些实用的代码，可以部署来玩玩</p>
</blockquote>
<h3 id="1、反向代理"><a href="#1、反向代理" class="headerlink" title="1、反向代理"></a>1、反向代理</h3><blockquote>
<p>这个代码理论上可以实现反代任意网站<br>不知道反向代理的 <a href="https://url.cn/tMaCMpgn" target="_blank" rel="noopener">https://url.cn/tMaCMpgn</a><br>github: <a href="https://github.com/xiaoyang-liu-cs/workers-proxy" target="_blank" rel="noopener">https://github.com/xiaoyang-liu-cs/workers-proxy</a></p>
</blockquote>
<div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold">
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 要进行反向代理的网站</span></span><br><span class="line"><span class="keyword">const</span> upstream = <span class="string">'example.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 要进行代理的路径(一般不用改)</span></span><br><span class="line"><span class="keyword">const</span> upstream_path = <span class="string">'/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 要进行反向代理的网站的移动站(一般跟上面一样就行)</span></span><br><span class="line"><span class="keyword">const</span> upstream_mobile = <span class="string">'example.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你希望禁止访问的国家/地区</span></span><br><span class="line"><span class="keyword">const</span> blocked_region = [<span class="string">'KP'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你希望禁止访问的ip</span></span><br><span class="line"><span class="keyword">const</span> blocked_ip_address = [<span class="string">'127.0.0.1'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否使用https与源站连接(一般不用改，现在大部分网站都支持https了)</span></span><br><span class="line"><span class="keyword">const</span> https = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换文本</span></span><br><span class="line"><span class="keyword">const</span> replace_dict = &#123;</span><br><span class="line">    <span class="string">'$upstream'</span>: <span class="string">'$custom_domain'</span>,</span><br><span class="line">    <span class="string">'//www.youtube.com'</span>: <span class="string">''</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</span><br><span class="line">    event.respondWith(fetchAndApply(event.request));</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchAndApply</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> region = request.headers.get(<span class="string">'cf-ipcountry'</span>).toUpperCase();</span><br><span class="line">    <span class="keyword">const</span> ip_address = request.headers.get(<span class="string">'cf-connecting-ip'</span>);</span><br><span class="line">    <span class="keyword">const</span> user_agent = request.headers.get(<span class="string">'user-agent'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> response = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="keyword">new</span> URL(request.url);</span><br><span class="line">    <span class="keyword">let</span> url_hostname = url.hostname;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (https == <span class="literal">true</span>) &#123;</span><br><span class="line">        url.protocol = <span class="string">'https:'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        url.protocol = <span class="string">'http:'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">await</span> device_status(user_agent)) &#123;</span><br><span class="line">        <span class="keyword">var</span> upstream_domain = upstream;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> upstream_domain = upstream_mobile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    url.host = upstream_domain;</span><br><span class="line">    <span class="keyword">if</span> (url.pathname == <span class="string">'/'</span>) &#123;</span><br><span class="line">        url.pathname = upstream_path;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        url.pathname = upstream_path + url.pathname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (blocked_region.includes(region)) &#123;</span><br><span class="line">        response = <span class="keyword">new</span> Response(<span class="string">'Access denied: WorkersProxy is not available in your region yet.'</span>, &#123;</span><br><span class="line">            status: <span class="number">403</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (blocked_ip_address.includes(ip_address)) &#123;</span><br><span class="line">        response = <span class="keyword">new</span> Response(<span class="string">'Access denied: Your IP address is blocked by WorkersProxy.'</span>, &#123;</span><br><span class="line">            status: <span class="number">403</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> method = request.method;</span><br><span class="line">        <span class="keyword">let</span> request_headers = request.headers;</span><br><span class="line">        <span class="keyword">let</span> new_request_headers = <span class="keyword">new</span> Headers(request_headers);</span><br><span class="line"></span><br><span class="line">        new_request_headers.set(<span class="string">'Host'</span>, url.hostname);</span><br><span class="line">        new_request_headers.set(<span class="string">'Referer'</span>, url.hostname);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> original_response = <span class="keyword">await</span> fetch(url.href, &#123;</span><br><span class="line">            method: method,</span><br><span class="line">            headers: new_request_headers</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> original_response_clone = original_response.clone();</span><br><span class="line">        <span class="keyword">let</span> original_text = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">let</span> response_headers = original_response.headers;</span><br><span class="line">        <span class="keyword">let</span> new_response_headers = <span class="keyword">new</span> Headers(response_headers);</span><br><span class="line">        <span class="keyword">let</span> status = original_response.status;</span><br><span class="line"></span><br><span class="line">        new_response_headers.set(<span class="string">'access-control-allow-origin'</span>, <span class="string">'*'</span>);</span><br><span class="line">        new_response_headers.set(<span class="string">'access-control-allow-credentials'</span>, <span class="literal">true</span>);</span><br><span class="line">        new_response_headers.delete(<span class="string">'content-security-policy'</span>);</span><br><span class="line">        new_response_headers.delete(<span class="string">'content-security-policy-report-only'</span>);</span><br><span class="line">        new_response_headers.delete(<span class="string">'clear-site-data'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> content_type = new_response_headers.get(<span class="string">'content-type'</span>);</span><br><span class="line">        <span class="keyword">if</span> (content_type.includes(<span class="string">'text/html'</span>) &amp;&amp; content_type.includes(<span class="string">'UTF-8'</span>)) &#123;</span><br><span class="line">            original_text = <span class="keyword">await</span> replace_response_text(original_response_clone, upstream_domain, url_hostname);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            original_text = original_response_clone.body</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        response = <span class="keyword">new</span> Response(original_text, &#123;</span><br><span class="line">            status,</span><br><span class="line">            headers: new_response_headers</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">replace_response_text</span>(<span class="params">response, upstream_domain, host_name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> text = <span class="keyword">await</span> response.text()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> replace_dict) &#123;</span><br><span class="line">        j = replace_dict[i]</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="string">'$upstream'</span>) &#123;</span><br><span class="line">            i = upstream_domain</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="string">'$custom_domain'</span>) &#123;</span><br><span class="line">            i = host_name</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (j == <span class="string">'$upstream'</span>) &#123;</span><br><span class="line">            j = upstream_domain</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="string">'$custom_domain'</span>) &#123;</span><br><span class="line">            j = host_name</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(i, <span class="string">'g'</span>)</span><br><span class="line">        text = text.replace(re, j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> text;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">device_status</span>(<span class="params">user_agent_info</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> agents = [<span class="string">"Android"</span>, <span class="string">"iPhone"</span>, <span class="string">"SymbianOS"</span>, <span class="string">"Windows Phone"</span>, <span class="string">"iPad"</span>, <span class="string">"iPod"</span>];</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> v = <span class="number">0</span>; v &lt; agents.length; v++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user_agent_info.indexOf(agents[v]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div></div>

<p>将上面的两处<code>example.com</code>改成你想要进行反代的网站域名即可</p>
<h3 id="jsproxy"><a href="#jsproxy" class="headerlink" title="jsproxy"></a>jsproxy</h3><blockquote>
<p>该源码可实现在线代理(翻墙)<br>不是所有网站可用<br>github:<a href="https://github.com/EtherDream/jsproxy" target="_blank" rel="noopener">https://github.com/EtherDream/jsproxy</a></p>
</blockquote>
<div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold">
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * static files (404.html, sw.js, conf.js)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> ASSET_URL = <span class="string">'https://etherdream.github.io/jsproxy'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> JS_VER = <span class="number">10</span></span><br><span class="line"><span class="keyword">const</span> MAX_RETRY = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line"><span class="keyword">const</span> PREFLIGHT_INIT = &#123;</span><br><span class="line">  status: <span class="number">204</span>,</span><br><span class="line">  headers: <span class="keyword">new</span> Headers(&#123;</span><br><span class="line">    <span class="string">'access-control-allow-origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">    <span class="string">'access-control-allow-methods'</span>: <span class="string">'GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS'</span>,</span><br><span class="line">    <span class="string">'access-control-max-age'</span>: <span class="string">'1728000'</span>,</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;any&#125;</span> <span class="variable">body</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> <span class="variable">status</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&lt;string, string&gt;&#125;</span> <span class="variable">headers</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeRes</span>(<span class="params">body, status = <span class="number">200</span>, headers = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  headers[<span class="string">'--ver'</span>] = JS_VER</span><br><span class="line">  headers[<span class="string">'access-control-allow-origin'</span>] = <span class="string">'*'</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(body, &#123;status, headers&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>urlStr </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">newUrl</span>(<span class="params">urlStr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, e =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> ret = fetchHandler(e)</span><br><span class="line">    .catch(<span class="function"><span class="params">err</span> =&gt;</span> makeRes(<span class="string">'cfworker error:\n'</span> + err.stack, <span class="number">502</span>))</span><br><span class="line">  e.respondWith(ret)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;FetchEvent&#125;</span> </span>e </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchHandler</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> req = e.request</span><br><span class="line">  <span class="keyword">const</span> urlStr = req.url</span><br><span class="line">  <span class="keyword">const</span> urlObj = <span class="keyword">new</span> URL(urlStr)</span><br><span class="line">  <span class="keyword">const</span> path = urlObj.href.substr(urlObj.origin.length)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (urlObj.protocol === <span class="string">'http:'</span>) &#123;</span><br><span class="line">    urlObj.protocol = <span class="string">'https:'</span></span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">''</span>, <span class="number">301</span>, &#123;</span><br><span class="line">      <span class="string">'strict-transport-security'</span>: <span class="string">'max-age=99999999; includeSubDomains; preload'</span>,</span><br><span class="line">      <span class="string">'location'</span>: urlObj.href,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (path.startsWith(<span class="string">'/http/'</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> httpHandler(req, path.substr(<span class="number">6</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">switch</span> (path) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/http'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'请更新 cfworker 到最新版本!'</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/ws'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'not support'</span>, <span class="number">400</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="string">'/works'</span>:</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'it works'</span>)</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    <span class="comment">// static files</span></span><br><span class="line">    <span class="keyword">return</span> fetch(ASSET_URL + path)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Request&#125;</span> <span class="variable">req</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">pathname</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">httpHandler</span>(<span class="params">req, pathname</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> reqHdrRaw = req.headers</span><br><span class="line">  <span class="keyword">if</span> (reqHdrRaw.has(<span class="string">'x-jsproxy'</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> Response.error()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// preflight</span></span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">'OPTIONS'</span> &amp;&amp;</span><br><span class="line">      reqHdrRaw.has(<span class="string">'access-control-request-headers'</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Response(<span class="literal">null</span>, PREFLIGHT_INIT)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> acehOld = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> rawSvr = <span class="string">''</span></span><br><span class="line">  <span class="keyword">let</span> rawLen = <span class="string">''</span></span><br><span class="line">  <span class="keyword">let</span> rawEtag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reqHdrNew = <span class="keyword">new</span> Headers(reqHdrRaw)</span><br><span class="line">  reqHdrNew.set(<span class="string">'x-jsproxy'</span>, <span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 此处逻辑和 http-dec-req-hdr.lua 大致相同</span></span><br><span class="line">  <span class="comment">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua</span></span><br><span class="line">  <span class="keyword">const</span> refer = reqHdrNew.get(<span class="string">'referer'</span>)</span><br><span class="line">  <span class="keyword">const</span> query = refer.substr(refer.indexOf(<span class="string">'?'</span>) + <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span> (!query) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'missing params'</span>, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> param = <span class="keyword">new</span> URLSearchParams(query)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> <span class="built_in">Object</span>.entries(param)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k.substr(<span class="number">0</span>, <span class="number">2</span>) === <span class="string">'--'</span>) &#123;</span><br><span class="line">      <span class="comment">// 系统信息</span></span><br><span class="line">      <span class="keyword">switch</span> (k.substr(<span class="number">2</span>)) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">'aceh'</span>:</span><br><span class="line">        acehOld = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="string">'raw-info'</span>:</span><br><span class="line">        [rawSvr, rawLen, rawEtag] = v.split(<span class="string">'|'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 还原 HTTP 请求头</span></span><br><span class="line">      <span class="keyword">if</span> (v) &#123;</span><br><span class="line">        reqHdrNew.set(k, v)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reqHdrNew.delete(k)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!param.has(<span class="string">'referer'</span>)) &#123;</span><br><span class="line">    reqHdrNew.delete(<span class="string">'referer'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// cfworker 会把路径中的 `//` 合并成 `/`</span></span><br><span class="line">  <span class="keyword">const</span> urlStr = pathname.replace(<span class="regexp">/^(https?):\/+/</span>, <span class="string">'$1://'</span>)</span><br><span class="line">  <span class="keyword">const</span> urlObj = newUrl(urlStr)</span><br><span class="line">  <span class="keyword">if</span> (!urlObj) &#123;</span><br><span class="line">    <span class="keyword">return</span> makeRes(<span class="string">'invalid proxy url: '</span> + urlStr, <span class="number">403</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/** <span class="doctag">@type <span class="type">&#123;RequestInit&#125;</span> </span>*/</span></span><br><span class="line">  <span class="keyword">const</span> reqInit = &#123;</span><br><span class="line">    method: req.method,</span><br><span class="line">    headers: reqHdrNew,</span><br><span class="line">    redirect: <span class="string">'manual'</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (req.method === <span class="string">'POST'</span>) &#123;</span><br><span class="line">    reqInit.body = req.body</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;RequestInit&#125;</span> </span>reqInit </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>retryTimes </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">proxy</span>(<span class="params">urlObj, reqInit, acehOld, rawLen, retryTimes</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(urlObj.href, reqInit)</span><br><span class="line">  <span class="keyword">const</span> resHdrOld = res.headers</span><br><span class="line">  <span class="keyword">const</span> resHdrNew = <span class="keyword">new</span> Headers(resHdrOld)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> expose = <span class="string">'*'</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> [k, v] <span class="keyword">of</span> resHdrOld.entries()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (k === <span class="string">'access-control-allow-origin'</span> ||</span><br><span class="line">        k === <span class="string">'access-control-expose-headers'</span> ||</span><br><span class="line">        k === <span class="string">'location'</span> ||</span><br><span class="line">        k === <span class="string">'set-cookie'</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">const</span> x = <span class="string">'--'</span> + k</span><br><span class="line">      resHdrNew.set(x, v)</span><br><span class="line">      <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">        expose = expose + <span class="string">','</span> + x</span><br><span class="line">      &#125;</span><br><span class="line">      resHdrNew.delete(k)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (acehOld &amp;&amp;</span><br><span class="line">      k !== <span class="string">'cache-control'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'content-language'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'content-type'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'expires'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'last-modified'</span> &amp;&amp;</span><br><span class="line">      k !== <span class="string">'pragma'</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      expose = expose + <span class="string">','</span> + k</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (acehOld) &#123;</span><br><span class="line">    expose = expose + <span class="string">',--s'</span></span><br><span class="line">    resHdrNew.set(<span class="string">'--t'</span>, <span class="string">'1'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// verify</span></span><br><span class="line">  <span class="keyword">if</span> (rawLen) &#123;</span><br><span class="line">    <span class="keyword">const</span> newLen = resHdrOld.get(<span class="string">'content-length'</span>) || <span class="string">''</span></span><br><span class="line">    <span class="keyword">const</span> badLen = (rawLen !== newLen)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (badLen) &#123;</span><br><span class="line">      <span class="keyword">if</span> (retryTimes &lt; MAX_RETRY) &#123;</span><br><span class="line">        urlObj = <span class="keyword">await</span> parseYtVideoRedir(urlObj, newLen, res)</span><br><span class="line">        <span class="keyword">if</span> (urlObj) &#123;</span><br><span class="line">          <span class="keyword">return</span> proxy(urlObj, reqInit, acehOld, rawLen, retryTimes + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> makeRes(res.body, <span class="number">400</span>, &#123;</span><br><span class="line">        <span class="string">'--error'</span>: <span class="string">`bad len: <span class="subst">$&#123;newLen&#125;</span>, except: <span class="subst">$&#123;rawLen&#125;</span>`</span>,</span><br><span class="line">        <span class="string">'access-control-expose-headers'</span>: <span class="string">'--error'</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (retryTimes &gt; <span class="number">1</span>) &#123;</span><br><span class="line">      resHdrNew.set(<span class="string">'--retry'</span>, retryTimes)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> status = res.status</span><br><span class="line"></span><br><span class="line">  resHdrNew.set(<span class="string">'access-control-expose-headers'</span>, expose)</span><br><span class="line">  resHdrNew.set(<span class="string">'access-control-allow-origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">  resHdrNew.set(<span class="string">'--s'</span>, status)</span><br><span class="line">  resHdrNew.set(<span class="string">'--ver'</span>, JS_VER)</span><br><span class="line"></span><br><span class="line">  resHdrNew.delete(<span class="string">'content-security-policy'</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">'content-security-policy-report-only'</span>)</span><br><span class="line">  resHdrNew.delete(<span class="string">'clear-site-data'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (status === <span class="number">301</span> ||</span><br><span class="line">      status === <span class="number">302</span> ||</span><br><span class="line">      status === <span class="number">303</span> ||</span><br><span class="line">      status === <span class="number">307</span> ||</span><br><span class="line">      status === <span class="number">308</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    status = status + <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(res.body, &#123;</span><br><span class="line">    status,</span><br><span class="line">    headers: resHdrNew,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isYtUrl</span>(<span class="params">urlObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    urlObj.host.endsWith(<span class="string">'.googlevideo.com'</span>) &amp;&amp;</span><br><span class="line">    urlObj.pathname.startsWith(<span class="string">'/videoplayback'</span>)</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;URL&#125;</span> </span>urlObj </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>newLen </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Response&#125;</span> </span>res </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">parseYtVideoRedir</span>(<span class="params">urlObj, newLen, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newLen &gt; <span class="number">2000</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> res.text()</span><br><span class="line">    urlObj = <span class="keyword">new</span> URL(data)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!isYtUrl(urlObj)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> urlObj</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div></div>
<p>然后访问自定义的网址即可，是不是很神奇呢<br>后面会介绍如何自定义域名<br>最终效果如图↓<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io/posts/cf-workers/jsproxy.jpg" width = "60%" /></p>
<h3 id="CF-Worker-Dir"><a href="#CF-Worker-Dir" class="headerlink" title="CF-Worker-Dir"></a>CF-Worker-Dir</h3><blockquote>
<p>CF-Worker-Dir是一款适用于Cloudflare Worker平台上的云函数程序，可以使用它在一分钟内搭建属于自己的导航页面。<br>github:<a href="https://github.com/sleepwood/CF-Worker-Dir" target="_blank" rel="noopener">https://github.com/sleepwood/CF-Worker-Dir</a></p>
</blockquote>
<div><div class="fold_hider"><div class="close hider_title">点击显/隐内容</div></div><div class="fold">
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  自定义网站配置 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  title: <span class="string">"自定义导航"</span>,                 <span class="comment">//write your website title</span></span><br><span class="line">  subtitle: <span class="string">"Cloudflare Workers Dir"</span>, <span class="comment">//write your website subtitle</span></span><br><span class="line">  logo_icon: <span class="string">"sitemap"</span>,               <span class="comment">//select your logo by semantic-ui icon (you can get more msg in:https://semantic-ui.com/elements/icon.html)</span></span><br><span class="line">  hitokoto: <span class="literal">true</span>,                     <span class="comment">//use hitokoto or not</span></span><br><span class="line">  search:<span class="literal">true</span>,                        <span class="comment">//enable search function</span></span><br><span class="line">  search_engine:[                     <span class="comment">//choose search engine which you use</span></span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"百 度"</span>,</span><br><span class="line">      template:<span class="string">"https://www.baidu.com/s?wd=$s"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"谷 歌"</span>,</span><br><span class="line">      template:<span class="string">"https://www.google.com/search?q=$s"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"必 应"</span>,</span><br><span class="line">      template:<span class="string">"https://www.bing.com/search?q=$s"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"搜 狗"</span>,</span><br><span class="line">      template:<span class="string">"https://www.sogou.com/web?query=$s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  selling_ads: <span class="literal">true</span>,                  <span class="comment">//Selling your domain or not.(turning on may be helpful for selling this domain by showing some ads.)</span></span><br><span class="line">  sell_info:&#123;</span><br><span class="line">    domain:<span class="string">"example.com"</span>,</span><br><span class="line">    price:<span class="number">500</span>,                        <span class="comment">//domain price</span></span><br><span class="line">    mon_unit:<span class="string">"yen sign"</span>,              <span class="comment">//monetary unit </span></span><br><span class="line">    contact:[                         <span class="comment">//how to contact you</span></span><br><span class="line">      &#123;</span><br><span class="line">        type:<span class="string">"envelope"</span>,               <span class="comment">//contact type ("weixin","qq","telegram plane","envelope" or "phone")</span></span><br><span class="line">        content:<span class="string">"info@example.com"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]                        </span><br><span class="line">  &#125;,</span><br><span class="line">  lists: [                            <span class="comment">//Url list</span></span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"技术"</span>,</span><br><span class="line">      icon:<span class="string">"code"</span>,</span><br><span class="line">      list:[</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://oschina.net/"</span>,</span><br><span class="line">          name:<span class="string">"开源中国"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://v2ex.com"</span>,</span><br><span class="line">          name:<span class="string">"V2EX"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://csdn.net/"</span>,</span><br><span class="line">          name:<span class="string">"CSDN技术社区"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://github.com/"</span>,</span><br><span class="line">          name:<span class="string">"Github"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name:<span class="string">"学习"</span>,</span><br><span class="line">      icon:<span class="string">"graduation cap"</span>,</span><br><span class="line">      list:[</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://w3school.com.cn/"</span>,</span><br><span class="line">          name:<span class="string">"W3school在线教程"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://runoob.com/"</span>,</span><br><span class="line">          name:<span class="string">"菜鸟教程"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://segmentfault.com/"</span>,</span><br><span class="line">          name:<span class="string">"思否社区"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          url:<span class="string">"https://jianshu.com/"</span>,</span><br><span class="line">          name:<span class="string">"简书"</span>,</span><br><span class="line">          desc:<span class="string">"程序员集散地"</span></span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> el = <span class="function">(<span class="params">tag, attrs, content</span>) =&gt;</span> <span class="string">`&lt;<span class="subst">$&#123;tag&#125;</span> <span class="subst">$&#123;attrs.join(<span class="string">" "</span>)&#125;</span>&gt;<span class="subst">$&#123;content&#125;</span>&lt;/<span class="subst">$&#123;tag&#125;</span>&gt;`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">handleRequest</span>(<span class="params">request</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> init = &#123;</span><br><span class="line">    headers: &#123;</span><br><span class="line">      <span class="string">'content-type'</span>: <span class="string">'text/html;charset=UTF-8'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Response(renderHTML(renderIndex(),config.selling_ads? renderSeller() :<span class="literal">null</span>), init);</span><br><span class="line">&#125;</span><br><span class="line">addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> event.respondWith(handleRequest(event.request))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过分析链接 实时获取favicon</span></span><br><span class="line"><span class="comment">* @url 需要分析的Url地址</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFavicon</span>(<span class="params">url</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(url.match(<span class="regexp">/https&#123;0,1&#125;:\/\//</span>))&#123;</span><br><span class="line">    <span class="comment">//return "https://ui-avatars.com/api/?bold=true&amp;size=36&amp;background=0D8ABC&amp;color=fff&amp;rounded=true&amp;name=" + url.split('//')[1];</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"https://www.google.cn/s2/favicons?sz=64&amp;domain_url="</span> + url;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//return "https://ui-avatars.com/api/?bold=true&amp;size=36&amp;background=0D8ABC&amp;color=fff&amp;rounded=true&amp;name=" + url;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"https://www.google.cn/s2/favicons?sz=64&amp;domain_url=http://"</span> + url;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Render Functions</span></span><br><span class="line"><span class="comment"> *  渲染模块函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderIndex</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> footer = el(<span class="string">'footer'</span>,[],el(<span class="string">'div'</span>,[<span class="string">'class="footer"'</span>],<span class="string">'Powered by'</span> + el(<span class="string">'a'</span>,[<span class="string">'class="ui label"'</span>,<span class="string">'href="https://github.com/sleepwood/cf-worker-dir"'</span>,<span class="string">'target="_blank"'</span>],el(<span class="string">'i'</span>,[<span class="string">'class="github icon"'</span>],<span class="string">""</span>) + <span class="string">'Cf-Worker-Dir'</span>) + <span class="string">' &amp;copy; Base on '</span> + el(<span class="string">'a'</span>,[<span class="string">'class="ui label"'</span>],el(<span class="string">'i'</span>,[<span class="string">'class="balance scale icon"'</span>],<span class="string">""</span>) + <span class="string">'MIT License'</span>)));</span><br><span class="line">  <span class="keyword">return</span> renderHeader() + renderMain() + footer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderHeader</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> item = <span class="function">(<span class="params">template,name</span>) =&gt;</span> el(<span class="string">'a'</span>,[<span class="string">'class="item"'</span>,<span class="string">`data-url="<span class="subst">$&#123;template&#125;</span>"`</span>],name);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> nav = el(<span class="string">'div'</span>,[<span class="string">'class="ui large secondary inverted menu"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="item"'</span>],el(<span class="string">'p'</span>,[<span class="string">'id="hitokoto"'</span>],<span class="string">'条条大路通罗马'</span>)))</span><br><span class="line">  <span class="keyword">var</span> title = el(<span class="string">'h1'</span>,[<span class="string">'class="ui inverted header"'</span>],el(<span class="string">'i'</span>,[<span class="string">`class="<span class="subst">$&#123;config.logo_icon&#125;</span> icon"`</span>],<span class="string">""</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="content"'</span>],config.title + el(<span class="string">'div'</span>,[<span class="string">'class="sub header"'</span>],config.subtitle)));</span><br><span class="line">  <span class="keyword">var</span> menu = el(<span class="string">'div'</span>,[<span class="string">'id="sengine"'</span>,<span class="string">'class="ui bottom attached tabular inverted secondary menu"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="header item"'</span>],<span class="string">'&amp;nbsp;'</span>) + config.search_engine.map(<span class="function">(<span class="params">link,key</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(key == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> el(<span class="string">'a'</span>,[<span class="string">'class="active item"'</span>,<span class="string">`data-url="<span class="subst">$&#123;link.template&#125;</span>"`</span>],link.name);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> item(link.template,link.name);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;).join(<span class="string">""</span>))</span><br><span class="line">  <span class="keyword">var</span> input = el(<span class="string">'div'</span>,[<span class="string">'class="ui left corner labeled right icon fluid large input"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui left corner label"'</span>],el(<span class="string">'img'</span>,[<span class="string">'id="search-fav"'</span>,<span class="string">'class="left floated avatar ui image"'</span>,<span class="string">'src="https://www.baidu.com/favicon.ico"'</span>],<span class="string">""</span>)) + el(<span class="string">'input'</span>,[<span class="string">'id="searchinput"'</span>,<span class="string">'type="search"'</span>,<span class="string">'placeholder="搜索你想要知道的……"'</span>,<span class="string">'autocomplete="off"'</span>],<span class="string">""</span>) + el(<span class="string">'i'</span>,[<span class="string">'class="inverted circular search link icon"'</span>],<span class="string">""</span>));</span><br><span class="line">  <span class="keyword">return</span> el(<span class="string">'header'</span>,[],el(<span class="string">'div'</span>,[<span class="string">'id="head"'</span>,<span class="string">'class="ui inverted vertical masthead center aligned segment"'</span>],(config.hitokoto ? el(<span class="string">'div'</span>,[<span class="string">'id="nav"'</span>,<span class="string">'class="ui container"'</span>],nav) : <span class="string">""</span>) + el(<span class="string">'div'</span>,[<span class="string">'id="title"'</span>,<span class="string">'class="ui text container"'</span>],title + (config.search ? input + menu :<span class="string">""</span>) + <span class="string">`<span class="subst">$&#123;config.selling_ads ? <span class="string">'&lt;div&gt;&lt;a id="menubtn" class="red ui icon inverted button"&gt;&lt;i class="heart icon"&gt;&lt;/i&gt; 喜欢此域名 &lt;/a&gt;&lt;/div&gt;'</span> : <span class="string">''</span>&#125;</span>`</span>)))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderMain</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> main = config.lists.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> card = <span class="function">(<span class="params">url,name,desc</span>)=&gt;</span> el(<span class="string">'a'</span>,[<span class="string">'class="card"'</span>,<span class="string">`href=<span class="subst">$&#123;url&#125;</span>`</span>,<span class="string">'target="_blank"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="content"'</span>],el(<span class="string">'img'</span>,[<span class="string">'class="left floated avatar ui image"'</span>,<span class="string">`src=<span class="subst">$&#123;getFavicon(url)&#125;</span>`</span>],<span class="string">""</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="header"'</span>],name) + el(<span class="string">'div'</span>,[<span class="string">'class="meta"'</span>],desc)));</span><br><span class="line">    <span class="keyword">const</span> divider = el(<span class="string">'h4'</span>,[<span class="string">'class="ui horizontal divider header"'</span>],el(<span class="string">'i'</span>,[<span class="string">`class="<span class="subst">$&#123;item.icon&#125;</span> icon"`</span>],<span class="string">""</span>)+item.name);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> content = el(<span class="string">'div'</span>,[<span class="string">'class="ui four stackable cards"'</span>],item.list.map(<span class="function">(<span class="params">link</span>) =&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> card(link.url,link.name,link.desc);</span><br><span class="line">    &#125;).join(<span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> el(<span class="string">'div'</span>,[<span class="string">'class="ui basic segment"'</span>],divider + content);</span><br><span class="line">  &#125;).join(<span class="string">""</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> el(<span class="string">'main'</span>,[],el(<span class="string">'div'</span>,[<span class="string">'class="ui container"'</span>],main));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderSeller</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> item = <span class="function">(<span class="params">type,content</span>) =&gt;</span> el(<span class="string">'div'</span>,[<span class="string">'class="item"'</span>],el(<span class="string">'i'</span>,[<span class="string">`class="<span class="subst">$&#123;type&#125;</span> icon"`</span>],<span class="string">""</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="content"'</span>],content));</span><br><span class="line">  <span class="keyword">var</span> title = el(<span class="string">'h1'</span>,[<span class="string">'class="ui yellow dividing header"'</span>],el(<span class="string">'i'</span>,[<span class="string">'class="gem outline icon"'</span>],<span class="string">""</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="content"'</span>],config.sell_info.domain + <span class="string">' 正在出售'</span>));</span><br><span class="line">  <span class="keyword">var</span> action = el(<span class="string">'div'</span>,[<span class="string">'class="actions"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui basic cancel inverted button"'</span>],el(<span class="string">'i'</span>,[<span class="string">'class="reply icon"'</span>],<span class="string">""</span>) + <span class="string">'返回'</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> contact = config.sell_info.contact.map(<span class="function">(<span class="params">list</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> item(list.type,list.content);</span><br><span class="line">  &#125;).join(<span class="string">""</span>);</span><br><span class="line">  <span class="keyword">var</span> column = el(<span class="string">'div'</span>,[<span class="string">'class="column"'</span>],el(<span class="string">'h3'</span>,[<span class="string">'class="ui center aligned icon inverted header"'</span>],el(<span class="string">'i'</span>,[<span class="string">'class="circular envelope open outline grey inverted icon"'</span>],<span class="string">""</span>) + <span class="string">'联系我'</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="ui relaxed celled large list"'</span>],contact));</span><br><span class="line">  <span class="keyword">var</span> price = el(<span class="string">'div'</span>,[<span class="string">'class="column"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui large yellow statistic"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="value"'</span>],el(<span class="string">'i'</span>,[<span class="string">`class="<span class="subst">$&#123;config.sell_info.mon_unit&#125;</span> icon"`</span>],<span class="string">""</span>) + config.sell_info.price)));</span><br><span class="line">  <span class="keyword">var</span> content = el(<span class="string">'div'</span>,[<span class="string">'class="content"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui basic segment"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui two column stackable center aligned grid"'</span>],el(<span class="string">'div'</span>,[<span class="string">'class="ui inverted vertical divider"'</span>],<span class="string">'感兴趣？'</span>) + el(<span class="string">'div'</span>,[<span class="string">'class="middle aligned row"'</span>],price + column))));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> el(<span class="string">'div'</span>,[<span class="string">'id="seller"'</span>,<span class="string">'class="ui basic modal"'</span>],title + content + action);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderHTML</span>(<span class="params">index,seller</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">  &lt;html lang="en"&gt;</span></span><br><span class="line"><span class="string">  &lt;head&gt;</span></span><br><span class="line"><span class="string">      &lt;meta charset="UTF-8"&gt;</span></span><br><span class="line"><span class="string">      &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;</span></span><br><span class="line"><span class="string">      &lt;meta http-equiv="X-UA-Compatible" content="ie=edge"&gt;</span></span><br><span class="line"><span class="string">      &lt;title&gt;<span class="subst">$&#123;config.title&#125;</span> - <span class="subst">$&#123;config.subtitle&#125;</span>&lt;/title&gt;</span></span><br><span class="line"><span class="string">      &lt;link href="https://cdn.jsdelivr.net/npm/semantic-ui-css@2.4.1/semantic.min.css" rel="stylesheet"&gt;</span></span><br><span class="line"><span class="string">      &lt;link href="https://cdn.jsdelivr.net/gh/sleepwood/cf-worker-dir@0.1.1/style.css" rel="stylesheet"&gt;</span></span><br><span class="line"><span class="string">      &lt;script src="https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">      &lt;script src="https://cdn.jsdelivr.net/npm/semantic-ui-css@2.4.1/semantic.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;/head&gt;</span></span><br><span class="line"><span class="string">  &lt;body&gt;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;index&#125;</span></span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;config.selling_ads ? seller : <span class="string">''</span>&#125;</span></span></span><br><span class="line"><span class="string">    &lt;script src="https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto" defer&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">      $('#sengine a').on('click', function (e) &#123;</span></span><br><span class="line"><span class="string">        $('#sengine a.active').toggleClass('active');</span></span><br><span class="line"><span class="string">        $(e.target).toggleClass('active');</span></span><br><span class="line"><span class="string">        $('#search-fav').attr('src',$(e.target).data('url').match(`</span>+<span class="regexp">/https&#123;0,1&#125;:\/\/\S+\//</span>+<span class="string">`)[0] + '/favicon.ico') ;</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      $('.search').on('click', function (e) &#123;</span></span><br><span class="line"><span class="string">          var url = $('#sengine a.active').data('url');</span></span><br><span class="line"><span class="string">          url = url.replace(`</span>+<span class="regexp">/\$s/</span>+<span class="string">`,$('#searchinput').val());</span></span><br><span class="line"><span class="string">          window.open(url);</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      /* 鼠标聚焦时，回车事件 */</span></span><br><span class="line"><span class="string">      $("#searchinput").bind("keypress", function()&#123;</span></span><br><span class="line"><span class="string">          if (event.keyCode == 13)&#123;</span></span><br><span class="line"><span class="string">          // 触发需要调用的方法</span></span><br><span class="line"><span class="string">          $(".search").click();</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">      $('#menubtn').on('click', function (e) &#123;</span></span><br><span class="line"><span class="string">          $('#seller').modal('show');</span></span><br><span class="line"><span class="string">      &#125;);</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">  &lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/html&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</div></div>
<p>详细步骤见:<a href="https://url.cn/06D9xM3j" target="_blank" rel="noopener">https://url.cn/06D9xM3j</a><br>最终效果如图↓<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io/posts/cf-workers/workers-dir.jpg" width = "60%" /></p>
<p>未完待续….</p>
]]></content>
      <tags>
        <tag>Cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>luogu-T100</title>
    <url>/posts/luogu-T100.html</url>
    <content><![CDATA[<h1 id="T100-【入门1】顺序结构"><a href="#T100-【入门1】顺序结构" class="headerlink" title="T100 -【入门1】顺序结构"></a>T100 -【入门1】顺序结构</h1><p><a href="https://www.luogu.com.cn/training/100" target="_blank" rel="noopener">https://www.luogu.com.cn/training/100</a></p>
<blockquote>
<p>注：本文代码均为<strong>python</strong><br>本文代码均为自己写的，不存在抄袭<br>本文所有代码仅供参考，抄袭后果自负</p>
</blockquote>
<h2 id="P1001-A-B-Problem"><a href="#P1001-A-B-Problem" class="headerlink" title="P1001     A+B Problem"></a>P1001     A+B Problem</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P1001" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1001</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = input().split()</span><br><span class="line">print(int(s[<span class="number">0</span>]) + int(s[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure>

<h2 id="P1000-超级玛丽游戏"><a href="#P1000-超级玛丽游戏" class="headerlink" title="P1000 超级玛丽游戏"></a>P1000 超级玛丽游戏</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P1000" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1000</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">print(<span class="string">'''                ********</span></span><br><span class="line"><span class="string">               ************</span></span><br><span class="line"><span class="string">               ####....#.</span></span><br><span class="line"><span class="string">             #..###.....##....</span></span><br><span class="line"><span class="string">             ###.......######              ###            ###</span></span><br><span class="line"><span class="string">                ...........               #...#          #...#</span></span><br><span class="line"><span class="string">               ##*#######                 #.#.#          #.#.#</span></span><br><span class="line"><span class="string">            ####*******######             #.#.#          #.#.#</span></span><br><span class="line"><span class="string">           ...#***.****.*###....          #...#          #...#</span></span><br><span class="line"><span class="string">           ....**********##.....           ###            ###</span></span><br><span class="line"><span class="string">           ....****    *****....</span></span><br><span class="line"><span class="string">             ####        ####</span></span><br><span class="line"><span class="string">           ######        ######</span></span><br><span class="line"><span class="string">##############################################################</span></span><br><span class="line"><span class="string">#...#......#.##...#......#.##...#......#.##------------------#</span></span><br><span class="line"><span class="string">###########################################------------------#</span></span><br><span class="line"><span class="string">#..#....#....##..#....#....##..#....#....#####################</span></span><br><span class="line"><span class="string">##########################################    #----------#</span></span><br><span class="line"><span class="string">#.....#......##.....#......##.....#......#    #----------#</span></span><br><span class="line"><span class="string">##########################################    #----------#</span></span><br><span class="line"><span class="string">#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#</span></span><br><span class="line"><span class="string">##########################################    ############'''</span>)</span><br></pre></td></tr></table></figure>
<p>这道题要特别注意<strong>格式</strong>(我试了五六次才过。。。)</p>
<h2 id="P5703-【深基2-例5】苹果采购"><a href="#P5703-【深基2-例5】苹果采购" class="headerlink" title="P5703 【深基2.例5】苹果采购"></a>P5703 【深基2.例5】苹果采购</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P5703" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5703</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">n = input(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">pattern = re.compile(<span class="string">r'\.'</span>)</span><br><span class="line"><span class="keyword">if</span> re.search(pattern,n[<span class="number">0</span>]) <span class="keyword">or</span> re.search(pattern,n[<span class="number">1</span>]):</span><br><span class="line">    print(<span class="string">'only support the number that without "."'</span>)</span><br><span class="line"><span class="keyword">elif</span> int(n[<span class="number">0</span>])&lt;<span class="number">0</span> <span class="keyword">or</span> int(n[<span class="number">1</span>])&lt;<span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'only support the Non-negative integer'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    res = int(n[<span class="number">0</span>]) * int(n[<span class="number">1</span>])</span><br><span class="line">    print(res)</span><br></pre></td></tr></table></figure>
<h2 id="P5704-【深基2-例6】字母转换"><a href="#P5704-【深基2-例6】字母转换" class="headerlink" title="P5704 【深基2.例6】字母转换"></a>P5704 【深基2.例6】字母转换</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P5704" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5704</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cloum = input(<span class="string">''</span>)</span><br><span class="line">print(cloum.upper())</span><br></pre></td></tr></table></figure>
<h2 id="P5705-【深基2-例7】数字反转"><a href="#P5705-【深基2-例7】数字反转" class="headerlink" title="P5705 【深基2.例7】数字反转"></a>P5705 【深基2.例7】数字反转</h2><blockquote>
<p> <a href="https://www.luogu.com.cn/problem/P5705" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5705</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">in_num = input(<span class="string">''</span>)</span><br><span class="line">print(float(<span class="string">''</span>.join(reversed(in_num))))</span><br></pre></td></tr></table></figure>
<h2 id="P5706-【深基2-例8】再分肥宅水"><a href="#P5706-【深基2-例8】再分肥宅水" class="headerlink" title="P5706 【深基2.例8】再分肥宅水"></a>P5706 【深基2.例8】再分肥宅水</h2><blockquote>
<p> <a href="https://www.luogu.com.cn/problem/P5706" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5706</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">in_num = input(<span class="string">''</span>).split()</span><br><span class="line">pre_student_cups = int(in_num[<span class="number">1</span>])*<span class="number">2</span></span><br><span class="line">pre_student = float(in_num[<span class="number">0</span>])/int(in_num[<span class="number">1</span>])</span><br><span class="line">print(<span class="string">'%.3f\n%s'</span> % (pre_student,str(pre_student_cups)))</span><br></pre></td></tr></table></figure>
<h2 id="P1425-小鱼的游泳时间"><a href="#P1425-小鱼的游泳时间" class="headerlink" title="P1425 小鱼的游泳时间"></a>P1425 小鱼的游泳时间</h2><blockquote>
<p> <a href="https://www.luogu.com.cn/problem/P1425" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1425</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">start_time = input(<span class="string">''</span>).split()</span><br><span class="line">e = int(start_time[<span class="number">2</span>])-int(start_time[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> int(start_time[<span class="number">3</span>])&lt;int(start_time[<span class="number">1</span>]):</span><br><span class="line">    e -= <span class="number">1</span></span><br><span class="line">    f = int(start_time[<span class="number">3</span>])+<span class="number">60</span>-int(start_time[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    f = int(start_time[<span class="number">3</span>]) - int(start_time[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">print(str(e)+<span class="string">' '</span>+str(f))</span><br></pre></td></tr></table></figure>
<h2 id="P2433-【深基1-2】小学数学-N-合一"><a href="#P2433-【深基1-2】小学数学-N-合一" class="headerlink" title="P2433 【深基1-2】小学数学 N 合一"></a>P2433 【深基1-2】小学数学 N 合一</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P2433" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P2433</a></p>
</blockquote>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">莫得<span class="comment">(还在解题中...)</span></span><br></pre></td></tr></table></figure>
<h2 id="P5708-【深基2-习2】三角形面积"><a href="#P5708-【深基2-习2】三角形面积" class="headerlink" title="P5708 【深基2.习2】三角形面积"></a>P5708 【深基2.习2】三角形面积</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P5708" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5708</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = input(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">s = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(nums)):</span><br><span class="line">    nums[i] = float(nums[i])</span><br><span class="line">    s = s+nums[i]</span><br><span class="line">s = s/<span class="number">2</span></span><br><span class="line">a,b,c = nums[<span class="number">0</span>],nums[<span class="number">1</span>],nums[<span class="number">2</span>]</span><br><span class="line">area = (s*(s-a)*(s-b)*(s-c)) ** <span class="number">0.5</span></span><br><span class="line">print(round(area,<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<h2 id="P1421-小玉买文具"><a href="#P1421-小玉买文具" class="headerlink" title="P1421 小玉买文具"></a>P1421 小玉买文具</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P1421" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1421</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">money = input(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">a,b = int(money[<span class="number">0</span>]),int(money[<span class="number">1</span>])</span><br><span class="line">res = (<span class="number">10</span>*a+b)/<span class="number">19</span></span><br><span class="line">print(int(res))</span><br></pre></td></tr></table></figure>
<h2 id="P5709-【深基2-习6】Apples-Prologue"><a href="#P5709-【深基2-习6】Apples-Prologue" class="headerlink" title="P5709 【深基2.习6】Apples Prologue"></a>P5709 【深基2.习6】Apples Prologue</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P5709" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P5709</a></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nums = input(<span class="string">''</span>).split(<span class="string">' '</span>)</span><br><span class="line">m,t,s = int(nums[<span class="number">0</span>]),int(nums[<span class="number">1</span>]),int(nums[<span class="number">2</span>])</span><br><span class="line">res = int(m-(s/t))</span><br><span class="line"><span class="keyword">if</span> res &lt; <span class="number">0</span>:</span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure>
<h2 id="P2181-对角线"><a href="#P2181-对角线" class="headerlink" title="P2181 对角线"></a>P2181 对角线</h2><blockquote>
<p><a href="https://www.luogu.com.cn/problem/P2181" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P2181</a></p>
</blockquote>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line">还是莫得...</span><br></pre></td></tr></table></figure>


<h1 id="作者的话"><a href="#作者的话" class="headerlink" title="作者的话"></a>作者的话</h1><p>emmm….. 注释什么的，有时间再写吧<br>有不明白的可以问我</p>
]]></content>
      <tags>
        <tag>洛谷</tag>
      </tags>
  </entry>
  <entry>
    <title>Sublime使用全攻略</title>
    <url>/posts/Sublime.html</url>
    <content><![CDATA[<h2 id="下载-amp-安装"><a href="#下载-amp-安装" class="headerlink" title="下载&amp;安装"></a>下载&amp;安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://www.sublimetext.cn/" target="_blank" rel="noopener"><strong>官网</strong></a> <a href="https://down.ravi.cool/#/1/main/sublime" target="_blank" rel="noopener"><strong>我的下载站</strong></a></p>
<a id="more"></a>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>有手就行。。。<br>这都不会，那就不用往下看了</p>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>没激活也能用，但是会不时弹出激活提示<br>本人强迫症，所以👇</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">Member J2TeaM</span><br><span class="line">Single User License</span><br><span class="line">EA7E<span class="number">-1011316</span></span><br><span class="line">D7DA350E <span class="number">1</span>B8B0760 <span class="number">972</span>F8B60 F3E64036</span><br><span class="line">B9B4E234 F356F38F <span class="number">0</span>AD1E3B7 <span class="number">0E9</span>C5FAD</span><br><span class="line">FA0A2ABE <span class="number">25</span>F65BD8 D51458E5 <span class="number">3923</span>CE80</span><br><span class="line"><span class="number">87428428</span> <span class="number">79079</span>A01 AA69F319 A1AF29A4</span><br><span class="line">A684C2DC <span class="number">0</span>B1583D4 <span class="number">19</span>CBD290 <span class="number">217618</span>CD</span><br><span class="line"><span class="number">5653E0</span>A0 BACE3948 BB2EE45E <span class="number">422</span>D2C87</span><br><span class="line">DD9AF44B <span class="number">99</span>C49590 D2DBDEE1 <span class="number">75860</span>FD2</span><br><span class="line"><span class="number">8</span>C8BB2AD B2ECE5A4 EFC08AF2 <span class="number">25</span>A9B864</span><br><span class="line">------ END LICENSE ------​</span><br></pre></td></tr></table></figure>
<img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/license.gif" width = "60%" />

<h2 id="设置中文-汉化"><a href="#设置中文-汉化" class="headerlink" title="设置中文(汉化)"></a>设置中文(汉化)</h2><p>安装插件控制面板<code>Tools -&gt; Install Package Control</code><br>安装有点慢，在左下角有提示<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/ipc.jpg" width = "60%" /><br>点击<code>Preferences -&gt; Package Control</code><br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/pc.jpg" width = "60%" /><br>在弹出的窗口中点击<code>Package Control: Install Package</code><br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/ip.jpg" width = "60%" /><br>再在弹出的窗口中，输入<code>clz</code>，点击<code>ChineseLocalizations</code><br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/clz.jpg" width = "60%" /><br>等待安装完成，<strong>大功告成</strong></p>
<p>完整演示👇<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/all.gif" width = "60%" /></p>
<h2 id="编写Markdown设置"><a href="#编写Markdown设置" class="headerlink" title="编写Markdown设置"></a>编写Markdown设置</h2><h3 id="MarkdownPreview"><a href="#MarkdownPreview" class="headerlink" title="MarkdownPreview"></a>MarkdownPreview</h3><p>按照上面的方法，在<code>Package Control: Install Package</code>中安装<code>MarkdownPreview</code></p>
<h4 id="用浏览器预览"><a href="#用浏览器预览" class="headerlink" title="用浏览器预览"></a>用浏览器预览</h4><h5 id="常规方法"><a href="#常规方法" class="headerlink" title="常规方法"></a>常规方法</h5><p>1.组合键 <code>Ctrl+Shift+P</code> 调出命令面板<br>2.输入mdp找到并选中Markdown Preview： Preview in Browser<br>3.出现三个选项：<code>github</code> <code>gitlab</code> <code>markdown</code> 任选其一即可<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/mdp.jpg" width = "60%" /><br>4.默认浏览器中显示预览结果</p>
<h5 id="用快捷键打开"><a href="#用快捷键打开" class="headerlink" title="用快捷键打开"></a>用快捷键打开</h5><p>设置快捷键：打开<code>首选项 -&gt; 快捷键设置</code><br>在右边的中括号内输入</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123; <span class="attr">"keys"</span>: [<span class="string">"alt+m"</span>],</span><br><span class="line"><span class="attr">"command"</span>: <span class="string">"markdown_preview"</span>,</span><br><span class="line"><span class="attr">"args"</span>: &#123;<span class="attr">"target"</span>: <span class="string">"browser"</span>, <span class="attr">"parser"</span>:<span class="string">"markdown"</span>&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>alt+m</code> 可设置为自己喜欢的按键<br><code>markdown</code> 也可设置为 <code>github</code>或<code>gitlab</code></p>
</blockquote>
<p>然后按下<code>alt+m</code>就可以在默认浏览器里查看预览啦</p>
<blockquote>
<p>但是上面的方法都很繁琐，然而像我这种懒人怎么会用呢(嘿嘿嘿)<br>所以就有了下面的<code>LiveReload</code></p>
</blockquote>
<h3 id="LiveReload"><a href="#LiveReload" class="headerlink" title="LiveReload"></a>LiveReload</h3><p>一样的在<code>Package Control</code>中安装<code>LiveReload</code><br>打开配置文件 <code>首选项-&gt; Package Settings -&gt; Markdown Preview -&gt; Settings</code></p>
<img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/markdown-setting.jpg" width = "60%" />
在右边加一条下面这个,保存后重启Sublime
> `"enable_autoreload": true`

<p>然后<code>Ctrl+Shift+P</code> 输入<code>LiveReload: Enable/disable plug-ins</code>,<br>回车, 选择 <code>Simple Reload with delay (400ms)</code>或者<code>Simple Reload</code>，<br>两者的区别在于后者没有延迟。<br><img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/reload.jpg" width = "60%" /></p>
<blockquote>
<p>这里又有一个问题了，每次都要<code>Ctrl+S</code>保存，岂不是很麻烦<br>所以就有了自动保存功能</p>
</blockquote>
<h3 id="自动保存"><a href="#自动保存" class="headerlink" title="自动保存"></a>自动保存</h3><p>打开<code>首选项 -&gt; 设置</code></p>
<img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/setting.jpg" width = "60%" />
在右边添加`"save_on_focus_lost": true`
> 注意：要先在上面的中括号后面加上逗号

<img data-src="https://cdn.jsdelivr.net/gh/ravizhan/ravizhan.github.io@master/posts/Sublime/add.jpg" width = "60%" />
这样当你的鼠标点击Sublime以外的地方，文件就会自动保存啦

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章就先写到这，希望对你们能有所帮助</p>
]]></content>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>hello world</title>
    <url>/posts/hello-world.html</url>
    <content><![CDATA[<p>hello world!<br>这是第一篇文章</p>
]]></content>
  </entry>
</search>
